name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # CONSTRUYO
    # 1. Clono el repositorio
    - name: Checkout repository
      uses: actions/checkout@v4

     # 2. Configuro Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      # Uso v3 porque es la misma del checkout
      # BuildX sirve para construir imágenes de Docker

      # 3. Levantar docker con docker-compose
    - name: Start Docker services
      run: docker compose up -d --build
      # Construye las imágenes de Docker basándose en el docker-compose
      # -d para hacerlo en segundo plano
      # Resultado del paso: Los contenedores quedan listos para correr las acciones

    # EMPIEZA EL PROCESO
    # Trato backend y frontend por separado

    # 4. Backend - Ejecutar tests
    - name: Run backend tests
      run: docker compose exec backend npm test
      # Ejecuta los tests que tengo en backend/test
      # docker exec es para correr un comando dentro del contenedor ya levantado -> deli-lunch-backend
    
    
    # 5 Frontend - Build y test
    #Verifico que hizo el build del front
    - name: Verify frontend build
      run: |
          echo "Verificando que el frontend se construyó correctamente..."
          docker compose exec frontend ls -la /usr/share/nginx/html
          echo "Frontend build verificado exitosamente"
        # El build ya se hizo durante docker compose up --build
        # Solo verificamos que los archivos estén en nginx

     # 6. Verificar que los servicios estén corriendo correctamente
    - name: Check running services
      run: |
        echo "Verificando servicios en ejecución..."
        docker compose ps
        echo "Verificando conectividad del backend..."
        docker compose exec backend curl -f http://localhost:4000 || echo "Backend endpoint check"
        echo "Verificando que nginx esté sirviendo el frontend..."
        docker compose exec frontend curl -f http://localhost:80 || echo "Frontend nginx check"
      # Verifico que ambos contenedores estén corriendo y respondiendo


      # 7. Apagar los servicios del docker
    - name: Stop Docker services
      run: docker compose down
      # Apago y limpio los contenedores levantados
